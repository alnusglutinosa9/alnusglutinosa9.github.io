
'use strict';class Sprite{constructor(options){this.canvas=options.canvas;this.ctx=options.ctx;this.image=options.image;this.frameIndex=1;this.rowIndex=1;this.tickCount=0;this.ticksPerFrame=options.ticksPerFrame||0;this.numberOfFrames=options.numberOfFrames||1;this.width=options.width;this.height=options.height;this.wframe=options.wframe;this.hframe=options.hframe;this.wWrap=options.wframe;this.hWrap=options.hframe;this.x=0;this.y=0;this.naturalHeight=options.naturalHeight;this.pause=false;this.lineCount=options.lineCount||1;this.countSprite=options.countSprite;this.start();}
update(){this.tickCount++;if(this.tickCount>this.ticksPerFrame){this.tickCount=0;if(this.frameIndex<this.countSprite){this.frameIndex++;if(this.rowIndex<this.numberOfFrames){this.rowIndex++;if(this.x>=this.width){this.x=0;}else{this.x=this.x+(this.width/this.numberOfFrames)}}else{this.rowIndex=1;this.x=0;this.y+=this.height;}}else{this.pause=true;}}}
setCanvasSize(){let wrapOffsetWidth=document.getElementById('js-canvas-wrap').offsetWidth;let wrapOffsetHeight=document.getElementById('js-canvas-wrap').offsetHeight;this.wWrap=this.canvas.width=Math.min(wrapOffsetWidth,wrapOffsetHeight);this.hWrap=this.canvas.height=Math.min(wrapOffsetWidth,wrapOffsetHeight);}
render(){this.setCanvasSize();this.ctx.clearRect(0,0,this.width/this.numberOfFrames,this.height);this.ctx.drawImage(this.image,this.x,this.y,this.width/this.numberOfFrames,this.height,0,0,Math.min(this.wframe,this.wWrap),Math.min(this.wframe,this.hWrap),)}
drawLastImg(){console.log('drawLastImg');ctx.clearRect(0,0,this.width/this.numberOfFrames,this.height);ctx.drawImage(this.image,3*(this.width/this.numberOfFrames),7*this.height,this.width/this.numberOfFrames,this.height,0,0,this.width/this.numberOfFrames,this.height)}
start(){let loop=()=>{if(this.pause)return;this.update();this.render();window.requestAnimationFrame(loop);}
window.requestAnimationFrame(loop);window.addEventListener('resize',()=>{this.setCanvasSize();this.ctx.drawImage(this.image,9*(this.width/this.numberOfFrames),5*this.height,this.width/this.numberOfFrames,this.height,0,0,Math.min(this.wframe,this.wWrap),Math.min(this.wframe,this.hWrap));console.log('addEventListener');});}}
let canvas=document.getElementById('canvas');let wframe=1000;let hframe=1000;let lineCountFrame=6;let w=canvas.width=(window.innerWidth>wframe)?wframe:window.innerWidth;let h=canvas.height=(window.innerWidth>hframe)?hframe:window.innerWidth;let numberOfFrames=8;let ctx=canvas.getContext('2d');let coinImage=new Image();coinImage.src='img/sprite-min-10-6.png';coinImage.onload=function(){console.log('naturalWidth',coinImage.naturalWidth);startAnimation();}
canvas.addEventListener('click',(e)=>{startAnimation();});function startAnimation(){let sprite=new Sprite({canvas:canvas,ctx:ctx,image:coinImage,width:coinImage.naturalWidth,height:coinImage.naturalHeight/lineCountFrame,naturalHeight:coinImage.naturalHeight,numberOfFrames:10,ticksPerFrame:1,lineCount:lineCountFrame,countSprite:60,wframe:wframe,hframe:hframe,})}
const spans=document.querySelectorAll('.word span');spans.forEach((span,idx)=>{span.addEventListener('click',(e)=>{e.target.classList.add('active');});span.addEventListener('animationend',(e)=>{e.target.classList.remove('active');});setTimeout(()=>{span.classList.add('active');},750*(idx+1))});$('.btn-round').on('click',function(e){console.log(e.currentTarget);explode(e.pageX,e.pageY,$(this));});function explode(x,y,btn){var symbolArray=['#circle','#circle-light','#square','#square-light',];var particles=10,explosion=btn.find('.btn-round__wrap');console.log(explosion.width());console.log(explosion.height());for(var i=0;i<particles;i++){var randomSymbol=Math.floor(Math.random()*symbolArray.length);var x=(explosion.width()/2)+rand(80,150)*Math.cos(2*Math.PI*i/rand(particles-10,particles+10)),y=(explosion.height()/2)+rand(80,150)*Math.sin(2*Math.PI*i/rand(particles-10,particles+10)),deg=rand(0,360)+'deg',scale=rand(0.5,1.1),elm=$('<svg class="Symbol" style="top:'+y+'px; left:'+x+'px; transform: scale('+scale+') rotate('+deg+');">'+'<use xlink:href="'+symbolArray[randomSymbol]+'" />'+'</svg>');if(i==0){elm.one('webkitAnimationEnd oanimationend msAnimationEnd animationend',function(e){elm.siblings('svg').remove().end().remove();});}
explosion.prepend(elm);}}
function rand(min,max){return Math.floor(Math.random()*(max+1))+min;}